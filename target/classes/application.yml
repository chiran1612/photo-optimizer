# Photo Optimizer Application Configuration
server:
  port: 8080
  servlet:
    context-path: /photo-optimizer

spring:
  application:
    name: photo-optimizer
  
  # Database Configuration
  datasource:
    url: jdbc:h2:file:./data/photo_optimizer_db
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  
  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
      enabled: true

# Photo Optimization Settings
photo:
  optimization:
    # Default quality settings for different formats
    jpeg-quality: 85
    png-compression: 6
    webp-quality: 80
    
    # Resize settings
    max-width: 1920
    max-height: 1080
    thumbnail-size: 300
    
    # Supported formats
    supported-formats: jpg,jpeg,png,gif,bmp,webp
    
    # Storage paths
    upload-path: ./uploads/original
    optimized-path: ./uploads/optimized
    thumbnail-path: ./uploads/thumbnails
    backup-path: ./uploads/backup

# Google Drive Integration
google:
  drive:
    # Credentials file path (will be created during setup)
    credentials-path: ./config/google-credentials.json
    # Application name for Google Drive API
    application-name: Photo Optimizer
    # Folder ID where photos will be stored (will be created if not exists)
    folder-id: 
    # Enable/disable Google Drive sync
    sync-enabled: false

# Logging Configuration
logging:
  level:
    com.photooptimizer: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ./logs/photo-optimizer.log

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
